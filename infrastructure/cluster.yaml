- name: Provision the k3s cluster
  hosts: all
  gather_facts: false
  tasks:
    - name: Ensure /etc/rancher/k3s directory exists
      ansible.builtin.file:
        path: /etc/rancher/k3s
        state: directory
      become: true

    - name: Copy k3s config file
      ansible.builtin.template:
        src: k3s-live.yaml.j2
        dest: /etc/rancher/k3s/config.yaml
      become: true

    - name: Check to see if the /boot/firmware/cmdline.txt file exists
      ansible.builtin.stat:
        path: /boot/firmware/cmdline.txt
      register: cmdline

    - name: For raspberry pi nodes add cgroup stuff
      ansible.builtin.lineinfile:
        path: /boot/firmware/cmdline.txt
        backrefs: true
        regexp: '^(?!.*\bcgroup_memory=1 cgroup_enable=memory\b)(.*)$'
        line: '\1 cgroup_memory=1 cgroup_enable=memory'
      when: cmdline.stat.exists
      become: true
      register: cmdline_file

    - name: Reboot the raspberry pi
      ansible.builtin.reboot:
        post_reboot_delay: 5
        reboot_timeout: 180
      ignore_errors: true
      when: "{{ cmdline_file.changed | default(false) }}"
      become: true

    - name: Wait for raspberry pi to start up again
      ansible.builtin.wait_for_connection:
        connect_timeout: 15
        sleep: 15
        timeout: 180
      ignore_errors: true

# Debug tasks
#    - name: List directory contents
#      ansible.builtin.command:
#        cmd: "cat /etc/rancher/k3s/config.yaml"
#      register: directory_contents
#
#    - name: Display directory contents
#      debug:
#        msg: "{{ directory_contents.stdout_lines }}"

    - name: Ensure ufw installed
      ansible.builtin.package:
        name: ufw
        state: present
      become: true

    - name: Open up tcp ports needed by k3s
      community.general.ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      with_items:
        - 22 # SSH
        - 6443
        - 10250
      become: true

    - name: Open up cidrs needed by k3s
      community.general.ufw:
        rule: allow
        src: "{{ item }}"
      with_items:
        - 10.42.0.0/16
        - 10.43.0.0/16
      become: true

    - name: Open up udp ports needed by k3s
      community.general.ufw:
        rule: allow
        port: "{{ item }}"
        proto: udp
      with_items: []
      become: true

    - name: Enable ufw and deny by default
      community.general.ufw:
        state: enabled
        policy: allow # TODO: Update to 'deny' once all ports gathered
        logging: off
      become: true

    - name: Download k3s installation script
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s-install.sh
        mode: '0755'

    - name: Gather service facts
      ansible.builtin.service_facts:

    - name: Service name
      ansible.builtin.set_fact:
        k3s_service_name: "{{ 'k3s-agent.service' if hostvars[inventory_hostname].agent == True else 'k3s.service' }}"

#    - name: Service
#      debug:
#        msg: "Service Name: {{ k3s_service_name }}"
#
#    - name: Service Status
#      debug:
#        msg: "Status of {{ k3s_service_name }}: {{ ansible_facts.services.get(k3s_service_name, {}).get(\"state\") }}"

    - name: Install k3s
      ansible.builtin.shell:
        cmd: "INSTALL_K3S_EXEC='{{ 'agent' if hostvars[inventory_hostname].agent == True else 'server' }}' sh /tmp/k3s-install.sh"
      when: ansible_facts.services.get(k3s_service_name, {}).get("state") != "running"